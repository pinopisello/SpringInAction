<?xml version="1.0" ?>


<project default="" basedir=".">
  <!-- -Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y-->
	
	
  <property name="build.classes.dir" location ="${basedir}/webroot/WEB-INF/classes"/>

  <!--<property file="build.properties"/>-->

	
  <property name="spitterService-java2wsdl-wsdl-path" value="${basedir}/webroot/WEB-INF/wsdl/SpitterService.wsdl"/>
  <property name="spitterService-java2wsdl-service-class" value="com.habuma.spitter.remoting.jaxws.SEI.SpitterServiceImpl"/>
  <property name="spitterService-java2wsdl-generated-path" location="${basedir}/src/main/java/com/habuma/spitter/remoting/jaxws/server"/>
  <property name="spitterService-wsdl2java-package-name" value="com.habuma.spitter.remoting.jaxws.server"/>
  <property name="spitterService-wsdl2java-bindinig-path" value="${basedir}/bindings.txt"/>
		 	 		

  <path id="cxf-classpath">
    <fileset dir="C:\Program Files\Java\jdk1.6.0_25\jre\lib" includes="rt.jar"/>
    <fileset dir="C:\Documents and Settings\W947523\.m2\repository\org\apache\neethi\neethi\3.0.0" includes="neethi-3.0.0.jar"/>
    <fileset dir="C:\Documents and Settings\W947523\.m2\repository\org\apache\ws\xmlschema\xmlschema-core\2.0" includes="xmlschema-core-2.0.jar"/>
    <fileset dir="C:\Documents and Settings\W947523\.m2\repository\org\apache\cxf\cxf-bundle\2.4.1" includes="cxf-bundle-2.4.1.jar"/>
  	<fileset dir="C:\Documents and Settings\W947523\.m2\repository\wsdl4j\wsdl4j\1.6.2" includes="wsdl4j-1.6.2.jar"/>
  	<fileset dir="C:\Documents and Settings\W947523\.m2\repository\org\apache\velocity\velocity\1.6.4" includes="velocity-1.6.4.jar"/>
  	<fileset dir="C:\Documents and Settings\W947523\.m2\repository\commons-collections\commons-collections\3.2.1" includes="commons-collections-3.2.1.jar"/>
  	<fileset dir="C:\Documents and Settings\W947523\.m2\repository\commons-lang\commons-lang\2.6" includes="commons-lang-2.6.jar"/>
  	<fileset dir="C:\Documents and Settings\W947523\.m2\repository\com\sun\xml\bind\jaxb-xjc\2.2.1.1" includes="jaxb-xjc-2.2.1.1.jar"/>
  	<fileset dir="C:\Documents and Settings\W947523\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.1.1" includes="jaxb-impl-2.2.1.1.jar"/>	
	<fileset dir="C:\Documents and Settings\W947523\.m2\repository\org\springframework\org.springframework.web\3.0.5.RELEASE" includes="org.springframework.web-3.0.5.RELEASE.jar"/>	
	<fileset dir="C:\Documents and Settings\W947523\.m2\repository\org\springframework\org.springframework.beans\3.0.5.RELEASE" includes="*.jar"/>	
	<fileset dir="C:/Documents and Settings/W947523/.m2/repository/javax/servlet/com.springsource.javax.servlet/2.5.0/" includes="*.jar"/>	
  	<pathelement location="${basedir}/../SpringInActionChapter10_spitter-service-common\target\classes"/>
  	<pathelement location="${build.classes.dir}"/>
  </path>
  
  <!-- Java 2 WSDL-->
  <echo message="input java class=${spitterService-java2wsdl-service-class}"  />
  <echo message="spitterService-java2wsdl-wsdl-path=${spitterService-java2wsdl-wsdl-path}"  />

	
  <!-- WSDL 2 Java-->
  <echo message="build-dir=${build-dir}"/>
  <echo message="cxf-classpath=${cxf-classpath}"  />

    	
<!-- Genera  SpitterService.wsdl a partire dalla classe che implementa il servizio  -->
 <target name="spitterService-java2wsdl">
 	<java  classpathref="cxf-classpath" classname="org.apache.cxf.tools.java2ws.JavaToWS" fork="false">
 		<arg value="-verbose"/> 
 		<arg value="-wsdl"/>
 		<arg value="-address"/>
 		<arg value="http://127.0.0.1:8080/SpitterService/ws/spitterService"/>	
 		 <!--<arg value="-createxsdimports"/>-->
     	 <arg value="-o"/>
         <arg value="${spitterService-java2wsdl-wsdl-path}"/>    	
         <arg value="${spitterService-java2wsdl-service-class}"/>
      </java>
   </target>
	
	
<!-- Genera e compila JAX-WS/JAXB code dal SpitterService.wsdl -->
	  <target name="spitterService-wsdl2java">
	  	<echo message="Running WSDL2Java task"/>
	    <delete quiet="true"  >
	    	<fileset dir="${spitterService-java2wsdl-generated-path}" casesensitive="yes">
	    	  <exclude name="Spittle.java"/>
	    	  <exclude name="Spitter.java"/>
	    	</fileset>
	  	</delete>
	   <!-- <mkdir dir="${spitterService-java2wsdl-generated-path}"/>-->
	    <java classpathref="cxf-classpath" fork="false"  classname="org.apache.cxf.tools.wsdlto.WSDLToJava">
	      <!-- -d parameter sets the output root directory -->
	      <arg value="-d"/>
	      <arg value="${basedir}/src/main/java"/>
	      <!-- -p parameter gives the package for CXF code generation -->
	      <arg value="-p"/>
	      <arg value="${spitterService-wsdl2java-package-name}"/>
	      <!--
	      <arg value="-client"/>
	      <arg value="-server"/>
	      <arg value="-impl"/>
	      <arg value="-all"/>
	      -->
	      <arg value="-server"/>
	      <!-- -validate parameter requests WSDL validation before generation -->
	      <arg value="-validate"/>
		   <!-- Bindings file per evitare che wsdl2java generi JAXBElemet invece che String-->
	      <arg value="-b"/>
		  <arg value="${spitterService-wsdl2java-bindinig-path}"/>    	
	    	
	      <!-- actual input WSDL -->
	      <arg value="${spitterService-java2wsdl-wsdl-path}"/>
	    </java>
	  	

	  	<!-- Non voglio perdere il file implementazione ogni violta che rigenero gli skeletons
	  	<copy file="${basedir}/src/main/java/com/habuma/spitter/remoting/jaxws/SEI/SpitterServiceEndpointImpl.java"
	  		tofile="${basedir}/src/main/java/com/habuma/spitter/remoting/jaxws/server/SpitterServiceEndpointInterfImpl.java"
	  	    overwrite="true">
	  		 <filterchain>
	  				<replacestring from="package com.habuma.spitter.remoting.jaxws.SEI"
	  					to="package com.habuma.spitter.remoting.jaxws.server" />
	  		 	<replacestring from="SpitterServiceEndpointImpl"
	  		 		  					to="SpitterServiceEndpointInterfImpl" />
	  		 	
	  	</filterchain>
	  	</copy>
	  -->
	  	
	  </target>

  <!-- Run the test client -->
  <target name="run">  
    <java classname="org.kp.adapter.client.WebServiceClient" failonerror="true"  fork="false">
      <classpath path="${basedir}/WebRoot/WEB-INF/classes"/>
      <classpath refid="cxf-classpath"/>
      <!-- Set logging to avoid chatty output -->
      <jvmarg value="-Djava.util.logging.config.file=${basedir}/logging.properties"/>
<!--  Change the next line to set a different host  -->
      <arg value="${host-name}"/>
<!--  Change the next line to set a different port  -->
      <arg value="${host-port}"/>
<!--  Change the next line to set a different service endpoint  -->
      <arg value="/cfx_library_exploded/"/>
    </java>
  </target>
	

</project>
