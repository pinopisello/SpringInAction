
package com.habuma.spitter.remoting.jaxws.server;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2011-09-19T15:07:34.081-07:00
 * Generated source version: 2.4.1
 * 
 */
public final class SpitterServiceEndpointInterf_SpitterServiceEndpointPort_Client {

    private static final QName SERVICE_NAME = new QName("http://SEI.jaxws.remoting.spitter.habuma.com/SpitterService", "SpitterService");

    private SpitterServiceEndpointInterf_SpitterServiceEndpointPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = SpitterService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SpitterService ss = new SpitterService(wsdlURL, SERVICE_NAME);
        SpitterServiceEndpointInterf port = ss.getSpitterServiceEndpointPort();  
        
        {
        System.out.println("Invoking getSpittleById...");
        long _getSpittleById_arg0 = 0;
        com.habuma.spitter.remoting.jaxws.server.Spittle _getSpittleById__return = port.getSpittleById(_getSpittleById_arg0);
        System.out.println("getSpittleById.result=" + _getSpittleById__return);


        }
        {
        System.out.println("Invoking getSpittlesForSpitter...");
        java.lang.String _getSpittlesForSpitter_arg0 = "";
        java.util.List<com.habuma.spitter.remoting.jaxws.server.Spittle> _getSpittlesForSpitter__return = port.getSpittlesForSpitter(_getSpittlesForSpitter_arg0);
        System.out.println("getSpittlesForSpitter.result=" + _getSpittlesForSpitter__return);


        }
        {
        System.out.println("Invoking saveSpitter...");
        com.habuma.spitter.remoting.jaxws.server.Spitter _saveSpitter_arg0 = new com.habuma.spitter.remoting.jaxws.server.Spitter();
        port.saveSpitter(_saveSpitter_arg0);


        }
        {
        System.out.println("Invoking getSpittlesForSpitterBySpitter...");
        com.habuma.spitter.remoting.jaxws.server.Spitter _getSpittlesForSpitterBySpitter_arg0 = new com.habuma.spitter.remoting.jaxws.server.Spitter();
        java.util.List<com.habuma.spitter.remoting.jaxws.server.Spittle> _getSpittlesForSpitterBySpitter__return = port.getSpittlesForSpitterBySpitter(_getSpittlesForSpitterBySpitter_arg0);
        System.out.println("getSpittlesForSpitterBySpitter.result=" + _getSpittlesForSpitterBySpitter__return);


        }
        {
        System.out.println("Invoking saveSpittle...");
        com.habuma.spitter.remoting.jaxws.server.Spittle _saveSpittle_arg0 = new com.habuma.spitter.remoting.jaxws.server.Spittle();
        port.saveSpittle(_saveSpittle_arg0);


        }
        {
        System.out.println("Invoking getRecentSpittles...");
        int _getRecentSpittles_arg0 = 0;
        java.util.List<com.habuma.spitter.remoting.jaxws.server.Spittle> _getRecentSpittles__return = port.getRecentSpittles(_getRecentSpittles_arg0);
        System.out.println("getRecentSpittles.result=" + _getRecentSpittles__return);


        }
        {
        System.out.println("Invoking getAllSpitters...");
        java.util.List<com.habuma.spitter.remoting.jaxws.server.Spitter> _getAllSpitters__return = port.getAllSpitters();
        System.out.println("getAllSpitters.result=" + _getAllSpitters__return);


        }
        {
        System.out.println("Invoking deleteSpittle...");
        long _deleteSpittle_arg0 = 0;
        port.deleteSpittle(_deleteSpittle_arg0);


        }
        {
        System.out.println("Invoking getSpitter...");
        java.lang.String _getSpitter_arg0 = "";
        com.habuma.spitter.remoting.jaxws.server.Spitter _getSpitter__return = port.getSpitter(_getSpitter_arg0);
        System.out.println("getSpitter.result=" + _getSpitter__return);


        }
        {
        System.out.println("Invoking getSpitterById...");
        long _getSpitterById_arg0 = 0;
        com.habuma.spitter.remoting.jaxws.server.Spitter _getSpitterById__return = port.getSpitterById(_getSpitterById_arg0);
        System.out.println("getSpitterById.result=" + _getSpitterById__return);


        }
        {
        System.out.println("Invoking startFollowing...");
        com.habuma.spitter.remoting.jaxws.server.Spitter _startFollowing_arg0 = new com.habuma.spitter.remoting.jaxws.server.Spitter();
        com.habuma.spitter.remoting.jaxws.server.Spitter _startFollowing_arg1 = new com.habuma.spitter.remoting.jaxws.server.Spitter();
        port.startFollowing(_startFollowing_arg0, _startFollowing_arg1);


        }

        System.exit(0);
    }

}
