<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>spring-ws</groupId>
	<artifactId>test-ws-server</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>test-ws Spring-WS Application</name>
	<url>http://www.springframework.org/spring-ws</url>
	<build>
		<finalName>test-ws-server</finalName>
		
			<!-- Questa sezione per evitare che Eclipse m2e plugin si lamenti del fatto di non sapere quando lanciare maven-jaxb2-plugin .
		Errore se sezione commenata e':
	    Plugin execution not covered by lifecycle configuration: org.jvnet.jaxb2.maven2:maven-jaxb2-plugin:0.7.5:generate (execution: default, phase: compile)	pom.xml	/Spring-ws-server	line 56	Maven Project Build Lifecycle Mapping Problem
		-->
		<pluginManagement>
		  <plugins>
		    <plugin>
		      <groupId>org.eclipse.m2e</groupId>
		      <artifactId>lifecycle-mapping</artifactId>
		      <version>1.0.0</version>
		      <configuration>
		        <lifecycleMappingMetadata>
		          <pluginExecutions>
		            <pluginExecution>
		              <pluginExecutionFilter>
		                <groupId>org.jvnet.jaxb2.maven2</groupId>
		                <artifactId>maven-jaxb2-plugin</artifactId>
		                <versionRange>[0.0.0,)</versionRange>
		                <goals>
		                  <goal>generate</goal>
		                </goals>
		              </pluginExecutionFilter>
		              <action>
		                <ignore />
		              </action>
		            </pluginExecution>
		          </pluginExecutions>
		        </lifecycleMappingMetadata>
		      </configuration>
		    </plugin>
		  </plugins>
		</pluginManagement>
		
		
		
		<plugins>
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<executions>
					<execution>
					<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
					    </goals>
					    <configuration>
					    <schemaDirectory>src/main/resources</schemaDirectory>
					    <!-- Directory dove droppa il codice JAXB generato -->
					    <generateDirectory>src/main/java</generateDirectory>
					    </configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<!--  <dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core-tiger</artifactId>
			<version>${spring-ws.version}</version>
		</dependency>-->
		
		
		<!-- Contiene classi tipo DefaultMessageListenerContainer per JMS server-->
		 <dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-support</artifactId>
			<version>${spring-ws.version}</version>
		</dependency>
		
		
		<dependency>
	        <groupId>org.springframework.ws</groupId>
	        <artifactId>spring-ws-security</artifactId>
	        <version>${spring-ws.version}</version>
         </dependency>
      
      <!-- 
      	   Senza questo on , con spring-ws-security inserito, a bootstrap becco una  eccezzione
           javax.xml.stream.FactoryFinder$ConfigurationError: Provider com.sun.xml.stream.ZephyrParserFactory not found 
      -->
      <dependency>
        <groupId>com.sun.xml.stream</groupId>
        <artifactId>sjsxp</artifactId>
        <version>1.0</version>
      </dependency>
     

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-test</artifactId>
			<version>${spring-ws.version}</version>
			 <exclusions>
			    <exclusion>
	        		<artifactId>spring-core</artifactId>
	        		<groupId>org.springframework</groupId>
	        	</exclusion>
	        	<exclusion>
	        		<artifactId>spring-tx</artifactId>
	        		<groupId>org.springframework</groupId>
	        	</exclusion>
	        	<exclusion>
	        		<artifactId>spring-ws-core</artifactId>
	        		<groupId>org.springframework.ws</groupId>
	        	</exclusion>
	        	<exclusion>
	        		<artifactId>spring-beans</artifactId>
	        		<groupId>org.springframework</groupId>
	        	</exclusion>
	        	<exclusion>
	        		<artifactId>spring-core</artifactId>
	        		<groupId>org.springframework</groupId>
	        	</exclusion>
	        </exclusions>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		
		
	</dependencies>
	<properties>
		<spring-ws.version>2.0.3.RELEASE</spring-ws.version>
		<junit.version>4.8.2</junit.version>
	</properties>
</project>
