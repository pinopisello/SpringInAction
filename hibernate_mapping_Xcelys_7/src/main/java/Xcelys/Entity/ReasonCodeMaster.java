package Xcelys.Entity;
// Generated Sep 20, 2011 10:12:32 AM by Hibernate Tools 3.2.0.CR1


import java.util.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ReasonCodeMaster generated by hbm2java
 */
@Entity
@Table(name="REASON_CODE_MASTER"
    ,schema="DORIS"
)
public class ReasonCodeMaster extends Base.BaseEntity implements java.io.Serializable {


     private String reasonCode;
     private String reasonCodeType;
     private String description;
     private String autoAuditLocCod;
     private Character securityCode;
     private Date insertDatetime;
     private String insertUser;
     private String insertProcess;
     private Date updateDatetime;
     private String updateUser;
     private String updateProcess;
     private Character uncleanFlag;
     private String userDefined1;
     private String userDefined2;
     private Date userDate1;
     private Date userDate2;
     private String description2;
     private String applyGraceDays;
     private String groupDirectPay;
     private String hipaaCertificate;
     private String cmsDisenrollmentReasonCode;
     private String clmRelCategory;
     private String liabTyp;
     private String inclCovChar;
     private String userDefined3;
     private String userDefined4;
     private Date userDate4;
     private Date userDate3;
     private String vendor1099Flag;
     private Set<GroupMaster> groupMastersForHoldReason = new HashSet<GroupMaster>(0);
     private Set<CobBankBenef> cobBankBenefs = new HashSet<CobBankBenef>(0);
     private Set<CobBank> cobBanks = new HashSet<CobBank>(0);
     private Set<GroupContract> groupContractsForTermReason = new HashSet<GroupContract>(0);
     private Set<GroupContract> groupContractsForClaimReason = new HashSet<GroupContract>(0);
     private Set<GroupContract> groupContractsForNewbornProcRsn = new HashSet<GroupContract>(0);
     private Set<LineOfBusinessMaster> lineOfBusinessMastersForTargetRevReason = new HashSet<LineOfBusinessMaster>(0);
     private Set<GroupMaster> groupMastersForPtdUseReasonCde = new HashSet<GroupMaster>(0);
     private Set<LineOfBusinessMaster> lineOfBusinessMastersForParReasonCode = new HashSet<LineOfBusinessMaster>(0);
     private Set<LineOfBusinessMaster> lineOfBusinessMastersForNewbornProcRsn = new HashSet<LineOfBusinessMaster>(0);
     private Set<LineOfBusinessMaster> lineOfBusinessMastersForNonParReasonCode = new HashSet<LineOfBusinessMaster>(0);
     private Set<PremiumMaster> premiumMasters = new HashSet<PremiumMaster>(0);
     private Set<GroupContract> groupContractsForNewbornOthContRsn = new HashSet<GroupContract>(0);

    public ReasonCodeMaster() {
    }

	
    public ReasonCodeMaster(String reasonCode, String inclCovChar) {
        this.reasonCode = reasonCode;
        this.inclCovChar = inclCovChar;
    }
    public ReasonCodeMaster(String reasonCode, String reasonCodeType, String description, String autoAuditLocCod, Character securityCode, Date insertDatetime, String insertUser, String insertProcess, Date updateDatetime, String updateUser, String updateProcess, Character uncleanFlag, String userDefined1, String userDefined2, Date userDate1, Date userDate2, String description2, String applyGraceDays, String groupDirectPay, String hipaaCertificate, String cmsDisenrollmentReasonCode, String clmRelCategory, String liabTyp, String inclCovChar, String userDefined3, String userDefined4, Date userDate4, Date userDate3, String vendor1099Flag, Set<GroupMaster> groupMastersForHoldReason, Set<CobBankBenef> cobBankBenefs, Set<CobBank> cobBanks, Set<GroupContract> groupContractsForTermReason, Set<GroupContract> groupContractsForClaimReason, Set<GroupContract> groupContractsForNewbornProcRsn, Set<LineOfBusinessMaster> lineOfBusinessMastersForTargetRevReason, Set<GroupMaster> groupMastersForPtdUseReasonCde, Set<LineOfBusinessMaster> lineOfBusinessMastersForParReasonCode, Set<LineOfBusinessMaster> lineOfBusinessMastersForNewbornProcRsn, Set<LineOfBusinessMaster> lineOfBusinessMastersForNonParReasonCode, Set<PremiumMaster> premiumMasters, Set<GroupContract> groupContractsForNewbornOthContRsn) {
       this.reasonCode = reasonCode;
       this.reasonCodeType = reasonCodeType;
       this.description = description;
       this.autoAuditLocCod = autoAuditLocCod;
       this.securityCode = securityCode;
       this.insertDatetime = insertDatetime;
       this.insertUser = insertUser;
       this.insertProcess = insertProcess;
       this.updateDatetime = updateDatetime;
       this.updateUser = updateUser;
       this.updateProcess = updateProcess;
       this.uncleanFlag = uncleanFlag;
       this.userDefined1 = userDefined1;
       this.userDefined2 = userDefined2;
       this.userDate1 = userDate1;
       this.userDate2 = userDate2;
       this.description2 = description2;
       this.applyGraceDays = applyGraceDays;
       this.groupDirectPay = groupDirectPay;
       this.hipaaCertificate = hipaaCertificate;
       this.cmsDisenrollmentReasonCode = cmsDisenrollmentReasonCode;
       this.clmRelCategory = clmRelCategory;
       this.liabTyp = liabTyp;
       this.inclCovChar = inclCovChar;
       this.userDefined3 = userDefined3;
       this.userDefined4 = userDefined4;
       this.userDate4 = userDate4;
       this.userDate3 = userDate3;
       this.vendor1099Flag = vendor1099Flag;
       this.groupMastersForHoldReason = groupMastersForHoldReason;
       this.cobBankBenefs = cobBankBenefs;
       this.cobBanks = cobBanks;
       this.groupContractsForTermReason = groupContractsForTermReason;
       this.groupContractsForClaimReason = groupContractsForClaimReason;
       this.groupContractsForNewbornProcRsn = groupContractsForNewbornProcRsn;
       this.lineOfBusinessMastersForTargetRevReason = lineOfBusinessMastersForTargetRevReason;
       this.groupMastersForPtdUseReasonCde = groupMastersForPtdUseReasonCde;
       this.lineOfBusinessMastersForParReasonCode = lineOfBusinessMastersForParReasonCode;
       this.lineOfBusinessMastersForNewbornProcRsn = lineOfBusinessMastersForNewbornProcRsn;
       this.lineOfBusinessMastersForNonParReasonCode = lineOfBusinessMastersForNonParReasonCode;
       this.premiumMasters = premiumMasters;
       this.groupContractsForNewbornOthContRsn = groupContractsForNewbornOthContRsn;
    }
   
     @Id 
    
    @Column(name="REASON_CODE", nullable=false, length=5)
    public String getReasonCode() {
        return this.reasonCode;
    }
    
    public void setReasonCode(String reasonCode) {
        this.reasonCode = reasonCode;
    }
    
    @Column(name="REASON_CODE_TYPE", length=2)
    public String getReasonCodeType() {
        return this.reasonCodeType;
    }
    
    public void setReasonCodeType(String reasonCodeType) {
        this.reasonCodeType = reasonCodeType;
    }
    
    @Column(name="DESCRIPTION", length=60)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="AUTO_AUDIT_LOC_COD", length=2)
    public String getAutoAuditLocCod() {
        return this.autoAuditLocCod;
    }
    
    public void setAutoAuditLocCod(String autoAuditLocCod) {
        this.autoAuditLocCod = autoAuditLocCod;
    }
    
    @Column(name="SECURITY_CODE", length=1)
    public Character getSecurityCode() {
        return this.securityCode;
    }
    
    public void setSecurityCode(Character securityCode) {
        this.securityCode = securityCode;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="INSERT_DATETIME", length=7)
    public Date getInsertDatetime() {
        return this.insertDatetime;
    }
    
    public void setInsertDatetime(Date insertDatetime) {
        this.insertDatetime = insertDatetime;
    }
    
    @Column(name="INSERT_USER", length=8)
    public String getInsertUser() {
        return this.insertUser;
    }
    
    public void setInsertUser(String insertUser) {
        this.insertUser = insertUser;
    }
    
    @Column(name="INSERT_PROCESS", length=8)
    public String getInsertProcess() {
        return this.insertProcess;
    }
    
    public void setInsertProcess(String insertProcess) {
        this.insertProcess = insertProcess;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="UPDATE_DATETIME", length=7)
    public Date getUpdateDatetime() {
        return this.updateDatetime;
    }
    
    public void setUpdateDatetime(Date updateDatetime) {
        this.updateDatetime = updateDatetime;
    }
    
    @Column(name="UPDATE_USER", length=8)
    public String getUpdateUser() {
        return this.updateUser;
    }
    
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }
    
    @Column(name="UPDATE_PROCESS", length=8)
    public String getUpdateProcess() {
        return this.updateProcess;
    }
    
    public void setUpdateProcess(String updateProcess) {
        this.updateProcess = updateProcess;
    }
    
    @Column(name="UNCLEAN_FLAG", length=1)
    public Character getUncleanFlag() {
        return this.uncleanFlag;
    }
    
    public void setUncleanFlag(Character uncleanFlag) {
        this.uncleanFlag = uncleanFlag;
    }
    
    @Column(name="USER_DEFINED_1", length=30)
    public String getUserDefined1() {
        return this.userDefined1;
    }
    
    public void setUserDefined1(String userDefined1) {
        this.userDefined1 = userDefined1;
    }
    
    @Column(name="USER_DEFINED_2", length=30)
    public String getUserDefined2() {
        return this.userDefined2;
    }
    
    public void setUserDefined2(String userDefined2) {
        this.userDefined2 = userDefined2;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="USER_DATE_1", length=7)
    public Date getUserDate1() {
        return this.userDate1;
    }
    
    public void setUserDate1(Date userDate1) {
        this.userDate1 = userDate1;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="USER_DATE_2", length=7)
    public Date getUserDate2() {
        return this.userDate2;
    }
    
    public void setUserDate2(Date userDate2) {
        this.userDate2 = userDate2;
    }
    
    @Column(name="DESCRIPTION_2", length=204)
    public String getDescription2() {
        return this.description2;
    }
    
    public void setDescription2(String description2) {
        this.description2 = description2;
    }
    
    @Column(name="APPLY_GRACE_DAYS", length=1)
    public String getApplyGraceDays() {
        return this.applyGraceDays;
    }
    
    public void setApplyGraceDays(String applyGraceDays) {
        this.applyGraceDays = applyGraceDays;
    }
    
    @Column(name="GROUP_DIRECT_PAY", length=1)
    public String getGroupDirectPay() {
        return this.groupDirectPay;
    }
    
    public void setGroupDirectPay(String groupDirectPay) {
        this.groupDirectPay = groupDirectPay;
    }
    
    @Column(name="HIPAA_CERTIFICATE", length=1)
    public String getHipaaCertificate() {
        return this.hipaaCertificate;
    }
    
    public void setHipaaCertificate(String hipaaCertificate) {
        this.hipaaCertificate = hipaaCertificate;
    }
    
    @Column(name="CMS_DISENROLLMENT_REASON_CODE", length=2)
    public String getCmsDisenrollmentReasonCode() {
        return this.cmsDisenrollmentReasonCode;
    }
    
    public void setCmsDisenrollmentReasonCode(String cmsDisenrollmentReasonCode) {
        this.cmsDisenrollmentReasonCode = cmsDisenrollmentReasonCode;
    }
    
    @Column(name="CLM_REL_CATEGORY", length=15)
    public String getClmRelCategory() {
        return this.clmRelCategory;
    }
    
    public void setClmRelCategory(String clmRelCategory) {
        this.clmRelCategory = clmRelCategory;
    }
    
    @Column(name="LIAB_TYP", length=1)
    public String getLiabTyp() {
        return this.liabTyp;
    }
    
    public void setLiabTyp(String liabTyp) {
        this.liabTyp = liabTyp;
    }
    
    @Column(name="INCL_COV_CHAR", nullable=false, length=1)
    public String getInclCovChar() {
        return this.inclCovChar;
    }
    
    public void setInclCovChar(String inclCovChar) {
        this.inclCovChar = inclCovChar;
    }
    
    @Column(name="USER_DEFINED_3", length=30)
    public String getUserDefined3() {
        return this.userDefined3;
    }
    
    public void setUserDefined3(String userDefined3) {
        this.userDefined3 = userDefined3;
    }
    
    @Column(name="USER_DEFINED_4", length=30)
    public String getUserDefined4() {
        return this.userDefined4;
    }
    
    public void setUserDefined4(String userDefined4) {
        this.userDefined4 = userDefined4;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="USER_DATE_4", length=7)
    public Date getUserDate4() {
        return this.userDate4;
    }
    
    public void setUserDate4(Date userDate4) {
        this.userDate4 = userDate4;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="USER_DATE_3", length=7)
    public Date getUserDate3() {
        return this.userDate3;
    }
    
    public void setUserDate3(Date userDate3) {
        this.userDate3 = userDate3;
    }
    
    @Column(name="VENDOR_1099_FLAG", length=1)
    public String getVendor1099Flag() {
        return this.vendor1099Flag;
    }
    
    public void setVendor1099Flag(String vendor1099Flag) {
        this.vendor1099Flag = vendor1099Flag;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByHoldReason")
    public Set<GroupMaster> getGroupMastersForHoldReason() {
        return this.groupMastersForHoldReason;
    }
    
    public void setGroupMastersForHoldReason(Set<GroupMaster> groupMastersForHoldReason) {
        this.groupMastersForHoldReason = groupMastersForHoldReason;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMaster")
    public Set<CobBankBenef> getCobBankBenefs() {
        return this.cobBankBenefs;
    }
    
    public void setCobBankBenefs(Set<CobBankBenef> cobBankBenefs) {
        this.cobBankBenefs = cobBankBenefs;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMaster")
    public Set<CobBank> getCobBanks() {
        return this.cobBanks;
    }
    
    public void setCobBanks(Set<CobBank> cobBanks) {
        this.cobBanks = cobBanks;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByTermReason")
    public Set<GroupContract> getGroupContractsForTermReason() {
        return this.groupContractsForTermReason;
    }
    
    public void setGroupContractsForTermReason(Set<GroupContract> groupContractsForTermReason) {
        this.groupContractsForTermReason = groupContractsForTermReason;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByClaimReason")
    public Set<GroupContract> getGroupContractsForClaimReason() {
        return this.groupContractsForClaimReason;
    }
    
    public void setGroupContractsForClaimReason(Set<GroupContract> groupContractsForClaimReason) {
        this.groupContractsForClaimReason = groupContractsForClaimReason;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByNewbornProcRsn")
    public Set<GroupContract> getGroupContractsForNewbornProcRsn() {
        return this.groupContractsForNewbornProcRsn;
    }
    
    public void setGroupContractsForNewbornProcRsn(Set<GroupContract> groupContractsForNewbornProcRsn) {
        this.groupContractsForNewbornProcRsn = groupContractsForNewbornProcRsn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByTargetRevReason")
    public Set<LineOfBusinessMaster> getLineOfBusinessMastersForTargetRevReason() {
        return this.lineOfBusinessMastersForTargetRevReason;
    }
    
    public void setLineOfBusinessMastersForTargetRevReason(Set<LineOfBusinessMaster> lineOfBusinessMastersForTargetRevReason) {
        this.lineOfBusinessMastersForTargetRevReason = lineOfBusinessMastersForTargetRevReason;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByPtdUseReasonCde")
    public Set<GroupMaster> getGroupMastersForPtdUseReasonCde() {
        return this.groupMastersForPtdUseReasonCde;
    }
    
    public void setGroupMastersForPtdUseReasonCde(Set<GroupMaster> groupMastersForPtdUseReasonCde) {
        this.groupMastersForPtdUseReasonCde = groupMastersForPtdUseReasonCde;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByParReasonCode")
    public Set<LineOfBusinessMaster> getLineOfBusinessMastersForParReasonCode() {
        return this.lineOfBusinessMastersForParReasonCode;
    }
    
    public void setLineOfBusinessMastersForParReasonCode(Set<LineOfBusinessMaster> lineOfBusinessMastersForParReasonCode) {
        this.lineOfBusinessMastersForParReasonCode = lineOfBusinessMastersForParReasonCode;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByNewbornProcRsn")
    public Set<LineOfBusinessMaster> getLineOfBusinessMastersForNewbornProcRsn() {
        return this.lineOfBusinessMastersForNewbornProcRsn;
    }
    
    public void setLineOfBusinessMastersForNewbornProcRsn(Set<LineOfBusinessMaster> lineOfBusinessMastersForNewbornProcRsn) {
        this.lineOfBusinessMastersForNewbornProcRsn = lineOfBusinessMastersForNewbornProcRsn;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByNonParReasonCode")
    public Set<LineOfBusinessMaster> getLineOfBusinessMastersForNonParReasonCode() {
        return this.lineOfBusinessMastersForNonParReasonCode;
    }
    
    public void setLineOfBusinessMastersForNonParReasonCode(Set<LineOfBusinessMaster> lineOfBusinessMastersForNonParReasonCode) {
        this.lineOfBusinessMastersForNonParReasonCode = lineOfBusinessMastersForNonParReasonCode;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMaster")
    public Set<PremiumMaster> getPremiumMasters() {
        return this.premiumMasters;
    }
    
    public void setPremiumMasters(Set<PremiumMaster> premiumMasters) {
        this.premiumMasters = premiumMasters;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="reasonCodeMasterByNewbornOthContRsn")
    public Set<GroupContract> getGroupContractsForNewbornOthContRsn() {
        return this.groupContractsForNewbornOthContRsn;
    }
    
    public void setGroupContractsForNewbornOthContRsn(Set<GroupContract> groupContractsForNewbornOthContRsn) {
        this.groupContractsForNewbornOthContRsn = groupContractsForNewbornOthContRsn;
    }




}


